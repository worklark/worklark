## This is the Travis CI config for the bot
## Please ensure you use the long-form name of flags e.g. --tag instead of -t
## This requires the following API tokens set in Travis CI:
## - HEROKU_API_KEY: available via `heroku auth:token`
## - HEROKU_STAGING_APP_NAME: the name of your production app to deploy
## - HEROKU_STAGING_APP_NAME: the name of your staging to deploy


language: generic

services:
  - docker

# build the docker container
before_install:
  - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
  - docker pull registry.heroku.com/$HEROKU_STAGING_APP_NAME/web
  - docker pull registry.heroku.com/$HEROKU_STAGING_APP_NAME/release
  - >
    docker build \
      --cache-from worklark/worklark.web:latest \
      --tag worklark/worklark.web:latest \
      --tag registry.heroku.com/$HEROKU_STAGING_APP_NAME/web \
      --file Dockerfile.web .
  - >
    docker build \
      --cache-from worklark/worklark.release:latest \
      --tag worklark/worklark.release:latest \
      --tag registry.heroku.com/$HEROKU_STAGING_APP_NAME/release \
      --file Dockerfile.release .
  - docker-compose up -d
  - docker-compose exec web bundle exec rubocop
  - docker-compose exec web bundle exec rake --trace db:create db:migrate test
  - curl https://cli-assets.heroku.com/install.sh | sh

# deploy the docker container
script:
  - docker push registry.heroku.com/$HEROKU_STAGING_APP_NAME/web
  - docker push registry.heroku.com/$HEROKU_STAGING_APP_NAME/release
  - heroku container:release web release --app $HEROKU_STAGING_APP_NAME
notifications:
  slack: $SLACK_TRAVIS_APP_TOKEN
